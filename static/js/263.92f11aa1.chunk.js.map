{"version":3,"file":"static/js/263.92f11aa1.chunk.js","mappings":"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","sources":["components/User/Logout/Logout.styled.js","components/User/Logout/Logout.jsx","components/User/UserData/UserData.styled.js","components/User/UserCommon.styled.js","components/User/UserData/UserDataTitle.jsx","components/User/UserData/UserData.jsx","components/User/PetsData/PetsData.styled.js","components/User/PetsData/PetsData.jsx","pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  background: #ffffff;\n  box-shadow: 7px 14px 14px rgba(0, 0, 0, 0.11);\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  padding-right: 12px;\n  padding-bottom: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n","import { useLogoutMutation } from \"redux/auth/authApi\";\nimport { Container } from \"./Logout.styled\";\n\nconst Logout = () => {\n  const [logout] = useLogoutMutation();\n  return (\n    <Container>\n      <button onClick={() => logout()}>Logout</button>\n    </Container>\n  );\n};\n\nexport default Logout;\n","import styled from \"@emotion/styled\";\n\nexport const UserImage = styled.img`\n  border-radius: 50%;\n  width: 233px;\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 12px;\n`;\n\nexport const InfoItem = styled.p`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  display: flex;\n  letter-spacing: 0.04em;\n  color: #000000;\n`;\n\nexport const EditableInfo = styled.p`\n  width: 159px;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n  color: #000000;\n  border-radius: 45px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  padding-left: 16px;\n  padding-top: 20px;\n  padding-right: 12px;\n  padding-bottom: 44px;\n  margin-top: 40px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  letter-spacing: 0.04em;\n`;\n\nexport const InfoContainer = styled.div``;\n","import { TitleContainer, Title } from \"../UserCommon.styled\";\n\nconst UserDataTitle = () => {\n  return (\n    <TitleContainer>\n      <Title>My information</Title>\n    </TitleContainer>\n  );\n};\n\nexport default UserDataTitle;\n","import { useRef } from \"react\";\nimport { CameraButton, EditButton } from \"components/Button\";\nimport { UserImage, ItemContainer, InfoItem, EditableInfo, Container } from \"./UserData.styled\";\nimport PropTypes from \"prop-types\";\nimport { InfoContainer } from \"../UserCommon.styled\";\nimport { default as UserTitle } from \"./UserDataTitle\";\n\nconst makeEditable = infoName => {\n  const editableInfo = document.getElementsByClassName(`userEditable_${infoName}`).item(0);\n  editableInfo.toggleAttribute(\"contentEditable\");\n  if (editableInfo.hasAttribute(\"contentEditable\")) {\n    console.log(\"should change color of background\");\n  }\n  if (!editableInfo.hasAttribute(\"contentEditable\")) {\n    console.log(`${editableInfo.innerHTML} should be sent in request to be saved`);\n  }\n};\n\nconst UserData = ({ user }) => {\n  const {\n    avatarURL = \"https://dummyimage.com/233x233\",\n    name = \"Name\",\n    email = \"mail@mail.ua\",\n    birthday = \"00.00.0000\",\n    phone = \"+3800000000\",\n    address = \"City, City\",\n  } = user;\n\n  const inputFile = useRef(null);\n\n  const onUploadClick = () => {\n    inputFile.current.click();\n  };\n\n  const onChangeFile = e => {\n    console.log(e.target.files[0]);\n  };\n\n  return (\n    <>\n      <UserTitle />\n      <Container>\n        <UserImage src={avatarURL} alt=\"userImage\" />\n        <input type=\"file\" ref={inputFile} onChange={onChangeFile} style={{ display: \"none\" }} />\n        <CameraButton onClick={onUploadClick} />\n        <InfoContainer>\n          <ItemContainer>\n            <InfoItem>Name:</InfoItem>\n            <EditableInfo className=\"userEditable_name\">{name}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"name\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>Email:</InfoItem>\n            <EditableInfo className=\"userEditable_email\">{email}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"email\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>Birthday:</InfoItem>\n            <EditableInfo className=\"userEditable_birthday\">{birthday}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"birthday\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>Phone:</InfoItem>\n            <EditableInfo className=\"userEditable_phone\">{phone}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"phone\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>City:</InfoItem>\n            <EditableInfo className=\"userEditable_city\">{address}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"city\")} />\n          </ItemContainer>\n        </InfoContainer>\n      </Container>\n    </>\n  );\n};\n\nUserData.propTypes = {\n  user: PropTypes.shape({\n    avatarURL: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    birthday: PropTypes.string,\n    phone: PropTypes.string,\n    address: PropTypes.string,\n  }),\n};\n\nexport default UserData;\n","import styled from \"@emotion/styled\";\n\nexport const AddPetButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const PetsItem = styled.div`\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 20px;\n  padding: 16px 20px 40px;\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PetsImage = styled.img`\n  border-radius: 20px;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 240px;\n`;\n\nexport const PetsItemPara = styled.p`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  display: flex;\n  letter-spacing: 0.04em;\n  color: #000000;\n  margin-top: 12px;\n`;\n","import React from \"react\";\nimport { TrashButton } from \"components/Button\";\nimport { AddPetButton, PetsItem, PetsImage, PetsItemPara } from \"./PetsData.styled\";\nimport { TitleContainer, Title, InfoContainer, Container } from \"../UserCommon.styled\";\n\nconst PetsData = () => {\n  return (\n    <Container>\n      <TitleContainer>\n        <Title>My pets:</Title>\n        <AddPetButton>\n          <Title>Add pet </Title>\n          <button>Add</button>\n        </AddPetButton>\n      </TitleContainer>\n      <PetsItem>\n        <PetsImage src=\"https://dummyimage.com/240x240/000/fff\" alt=\"Dummy\" />\n        <InfoContainer>\n          <PetsItemPara>Name: Lorem.</PetsItemPara>\n          <PetsItemPara>Date of birth: Lorem, ipsum.</PetsItemPara>\n          <PetsItemPara>Breed: Lorem, ipsum.</PetsItemPara>\n          <PetsItemPara>Comments: Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, error!</PetsItemPara>\n          <TrashButton />\n        </InfoContainer>\n      </PetsItem>\n    </Container>\n  );\n};\n\nexport default PetsData;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 61px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n`;\n","import { useGetCurrentUserQuery } from \"redux/auth/authApi\";\nimport authSelectors from \"redux/auth/authSelectors\";\nimport { useSelector } from \"react-redux\";\nimport { UserData, Logout, PetsData } from \"components/User\";\nimport { Container } from \"./UserPage.styled\";\n\nconst UserPage = () => {\n  const userToken = useSelector(authSelectors.getUserToken);\n  const { data: user = {}, isError, isFetching } = useGetCurrentUserQuery({ skip: userToken });\n\n  return (\n    <Container>\n      <div>\n        <UserData user={user} isError={isError} isFetching={isFetching} />\n        <Logout />\n      </div>\n      <PetsData />\n    </Container>\n  );\n};\n\nexport default UserPage;\n"],"names":["Container","styled","useLogoutMutation","logout","onClick","UserImage","ItemContainer","InfoItem","EditableInfo","TitleContainer","Title","InfoContainer","makeEditable","infoName","editableInfo","document","getElementsByClassName","item","toggleAttribute","hasAttribute","console","log","innerHTML","user","avatarURL","name","email","birthday","phone","address","inputFile","useRef","src","alt","type","ref","onChange","e","target","files","style","display","current","click","className","AddPetButton","PetsItem","PetsImage","PetsItemPara","userToken","useSelector","authSelectors","useGetCurrentUserQuery","skip","data","isError","isFetching"],"sourceRoot":""}