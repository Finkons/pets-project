{"version":3,"file":"static/js/393.7bde74cb.chunk.js","mappings":"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","sources":["components/AuthForm/LoginForm.styled.js","components/AuthForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx","schemas/authSchema.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport colors from \"../../styles/theme\";\nimport { Field } from \"formik\";\nimport { Link as link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 280px;\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  @media ${p => p.theme.media.tablet} {\n    width: 608px;\n    background-color: ${colors.colors.white};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding: 60px 80px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 618px;\n    background-color: ${colors.colors.white};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding: 60px 80px;\n    margin-top: 46px;\n  }\n`;\n\nexport const Text = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${colors.colors.primaryBtnText};\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  margin-bottom: 40px;\n  @media ${p => p.theme.media.tablet} {\n    font-size: 36px;\n    font-weight: 500;\n  }\n  @media ${p => p.theme.media.desktop} {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  height: 40px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  background: ${colors.colors.background};\n  font-size: 14px;\n  line-height: 1.4;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n  color: ${colors.colors.greyText};\n  outline: none;\n  :hover,\n  :focus {\n    border: 3px solid rgba(245, 146, 86, 0.5);\n  }\n  @media ${p => p.theme.media.tablet} {\n    width: 448px;\n    height: 52px;\n    font-size: 18px;\n    font-weight: 400;\n    padding: 14px 32px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 458px;\n    height: 52px;\n    font-size: 18px;\n    font-weight: 400;\n    padding: 14px 32px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-color: ${colors.colors.accent};\n  border-radius: 40px;\n  width: 280px;\n  height: 44px;\n  padding: 10px 28px;\n  color: ${colors.colors.white};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  background: ${colors.colors.accent};\n  margin-top: 24px;\n  :hover {\n    background-color: #ed5a03;\n  }\n  @media ${p => p.theme.media.tablet} {\n    width: 448px;\n    height: 44px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 458px;\n    height: 48px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  text-align: center;\n  font-size: 11px;\n  margin-top: -16px;\n  margin-bottom: 5px;\n  @media ${p => p.theme.media.tablet} {\n    font-size: 12px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    font-size: 13px;\n  }\n`;\n\nexport const LinkBox = styled.p`\n  display: flex;\n  justify-content: center;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.34;\n  color: ${colors.colors.greyText};\n  letter-spacing: 0.04em;\n  margin-top: 40px;\n`;\n\nexport const Link = styled(link)`\n  text-decoration-line: underline;\n  color: blue;\n  margin-left: 5px;\n`;\n\nexport const IconEye = styled.span`\n  position: absolute;\n  padding-top: 11px;\n  left: 90%;\n  cursor: pointer;\n  @media ${p => p.theme.media.tablet} {\n    left: 80%;\n    padding-top: 16px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    left: 80%;\n    padding-top: 16px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n`;\n","import { Formik, Form, ErrorMessage } from \"formik\";\nimport { useState } from \"react\";\nimport { Container, Text, Input, InputWrapper, IconEye, Button, ErrorText, LinkBox, Link } from \"./LoginForm.styled\";\nimport { loginSchema } from \"schemas/authSchema\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLoginMutation } from \"redux/auth/authApi\";\n// import { toast } from \"react-toastify\";\nimport { ImEye, ImEyeBlocked } from \"react-icons/im\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>} />;\n};\n\nexport const LoginForm = () => {\n  const [login, status] = useLoginMutation();\n  //status should be used for spinner\n  const navigate = useNavigate();\n\n  const [visible, setVisible] = useState(false);\n\n  const handleClickVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = async (values, actions) => {\n    const { email, password } = values;\n    login({ email, password })\n      .unwrap()\n      .then(() => {\n        navigate(\"/user\");\n      })\n      .catch(error => {\n        console.log(\"Handle errors\");\n        // toast.error(\"Sorry, your email or password is incorrect! Try again!\");\n      });\n\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    actions.resetForm();\n  };\n\n  console.log(status);\n\n  return (\n    <Container>\n      <Text>Login</Text>\n      <Formik initialValues={initialValues} validationSchema={loginSchema} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <Form autoComplete=\"off\">\n            <label htmlFor=\"email\">\n              <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <label htmlFor=\"password\">\n              <InputWrapper>\n                <Input type={visible ? \"text\" : \"password\"} name=\"password\" id=\"password\" placeholder=\"Password\" />\n                <IconEye onClick={handleClickVisible}>{visible ? <ImEye /> : <ImEyeBlocked />}</IconEye>\n              </InputWrapper>\n              <FormError name=\"password\" />\n            </label>\n            <Button disabled={isSubmitting} type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <LinkBox>\n        Don't have an account? <Link to={\"/register\"}>Register</Link>\n      </LinkBox>\n    </Container>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport wavesMobile from \"../../img/authPages-photos/waves-mobile.png\";\nimport wavesTablet from \"../../img/authPages-photos/waves-tablet.png\";\nimport wavesDesktop from \"../../img/authPages-photos/waves-desktop.png\";\n\nexport const Container = styled.div`\n  max-width: 100vw;\n  min-height: calc(100vh - 115px);\n  background-image: url(${wavesMobile});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center bottom;\n  background-color: ${p => p.theme.colors.background};\n  @media ${p => p.theme.media.tablet} {\n    background-image: url(${wavesTablet});\n    min-height: calc(100vh - 130px);\n  }\n  @media ${p => p.theme.media.desktop} {\n    background-image: url(${wavesDesktop});\n    min-height: calc(100vh - 70px);\n  }\n`;\n","import { LoginForm } from \"components/AuthForm/LoginForm\";\nimport { Container } from \"./LoginPage.styled\";\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import * as yup from \"yup\";\n\nconst passwordRules = /^(?!.* ).{7,32}$/;\nconst locationRules = /^(?=.*[a-zа-я])(?=.*[A-ZА-Я]).{3,32},(?=.*[a-zа-я])(?=.*[A-ZА-Я]).{3,32}$/;\nconst phoneRules = /[+380]+[0-9].{11}/;\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(\"This field is required\"),\n});\n\nexport const stepOneRegistSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(\"This field is required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"This field is required\"),\n});\n\nexport const stepTwoRegistSchema = yup.object().shape({\n  name: yup.string().required(\"This field is required\"),\n  location: yup.string().matches(locationRules, { message: \"Please enter a string in format city, region\" }).required(\"This field is required\"),\n  phone: yup.string().min(8).matches(phoneRules, { message: \"Please enter a string in format +380XXXXXXXXX\" }).required(\"This field is required\"),\n});\n"],"names":["Container","styled","p","theme","media","tablet","colors","desktop","Text","Input","Field","Button","ErrorText","LinkBox","Link","link","IconEye","InputWrapper","initialValues","email","password","FormError","name","render","message","LoginForm","useLoginMutation","login","status","navigate","useNavigate","useState","visible","setVisible","handleClickVisible","handleSubmit","values","actions","unwrap","then","catch","error","console","log","Promise","resolve","setTimeout","resetForm","validationSchema","loginSchema","onSubmit","isSubmitting","autoComplete","htmlFor","type","id","placeholder","onClick","disabled","to","wavesMobile","background","wavesTablet","wavesDesktop","passwordRules","yup","shape","required","min","max","matches","stepOneRegistSchema","confirmPassword","oneOf","stepTwoRegistSchema","location","phone"],"sourceRoot":""}