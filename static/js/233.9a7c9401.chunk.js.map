{"version":3,"file":"static/js/233.9a7c9401.chunk.js","mappings":"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","sources":["components/User/Logout/Logout.jsx","components/User/UserData/UserData.styled.js","components/User/UserCommon.styled.js","components/User/UserData/UserData.jsx","components/User/PetsData/PetsData.styled.js","components/User/PetsData/PetsData.jsx","pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import { useLogoutMutation } from \"redux/auth/authApi\";\n\nexport const Logout = () => {\n  const [logout] = useLogoutMutation();\n  return <button onClick={() => logout()}>Logout</button>;\n};\n\nexport default Logout;\n","import styled from \"@emotion/styled\";\n\nexport const UserImage = styled.img`\n  border-radius: 50%;\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 12px;\n`;\n\nexport const InfoItem = styled.p`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  display: flex;\n  letter-spacing: 0.04em;\n  color: #000000;\n`;\n\nexport const EditableInfo = styled.p`\n  width: 159px;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n  color: #000000;\n  border-radius: 45px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n`;\n\nexport const InfoContainer = styled.div``;\n","import { CameraButton, EditButton } from \"components/Button\";\nimport { UserImage, ItemContainer, InfoItem, EditableInfo } from \"./UserData.styled\";\nimport PropTypes from \"prop-types\";\nimport { TitleContainer, Title, InfoContainer } from \"../UserCommon.styled\";\n\nconst makeEditable = infoName => {\n  const editableInfo = document.getElementsByClassName(`userEditable_${infoName}`).item(0);\n  editableInfo.toggleAttribute(\"contentEditable\");\n  if (editableInfo.hasAttribute(\"contentEditable\")) {\n    console.log(\"should change color of background\");\n  }\n  if (!editableInfo.hasAttribute(\"contentEditable\")) {\n    console.log(`${editableInfo.innerHTML} should be sent in request to be saved`);\n  }\n};\n\nconst UserData = ({ name = \"name\", email = \"email\", birthday = \"date\", phone = \"number\", city = \"city\" }) => {\n  return (\n    <>\n      <TitleContainer>\n        <Title>My information</Title>\n      </TitleContainer>\n      {/* От куди мені цей тайтл подіти? В pages не засунеш, не ок. Окремим компонентом? */}\n      <UserImage src=\"https://dummyimage.com/233x233\" alt=\"Dummy\" />\n      <CameraButton />\n      <InfoContainer>\n        <ItemContainer>\n          <InfoItem>Name:</InfoItem>\n          <EditableInfo className=\"userEditable_name\">{name}</EditableInfo>\n          <EditButton onClick={() => makeEditable(\"name\")} />\n        </ItemContainer>\n        <ItemContainer>\n          <InfoItem>Email:</InfoItem>\n          <EditableInfo className=\"userEditable_email\">{email}</EditableInfo>\n          <EditButton onClick={() => makeEditable(\"email\")} />\n        </ItemContainer>\n        <ItemContainer>\n          <InfoItem>Birthday:</InfoItem>\n          <EditableInfo className=\"userEditable_birthday\">{birthday}</EditableInfo>\n          <EditButton onClick={() => makeEditable(\"birthday\")} />\n        </ItemContainer>\n        <ItemContainer>\n          <InfoItem>Phone:</InfoItem>\n          <EditableInfo className=\"userEditable_phone\">{phone}</EditableInfo>\n          <EditButton onClick={() => makeEditable(\"phone\")} />\n        </ItemContainer>\n        <ItemContainer>\n          <InfoItem>City:</InfoItem>\n          <EditableInfo className=\"userEditable_city\">{city}</EditableInfo>\n          <EditButton onClick={() => makeEditable(\"city\")} />\n        </ItemContainer>\n      </InfoContainer>\n    </>\n  );\n};\n\nUserData.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  birthday: PropTypes.string,\n  phone: PropTypes.string,\n  city: PropTypes.string,\n};\n\nexport default UserData;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const AddPetButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n`;\n\nexport const PetsItem = styled.div`\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 20px;\n  padding: 16px 20px 40px;\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PetsImage = styled.img`\n  border-radius: 20px;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 240px;\n`;\n\nexport const PetsItemInfo = styled.div``;\n\nexport const PetsItemPara = styled.p`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  display: flex;\n  letter-spacing: 0.04em;\n  color: #000000;\n  margin-top: 12px;\n`;\n","import React from \"react\";\nimport { TrashButton } from \"components/Button\";\nimport { Container, TitleContainer, AddPetButton, Title, PetsItem, PetsImage, PetsItemInfo, PetsItemPara } from \"./PetsData.styled\";\n\nconst PetsData = () => {\n  return (\n    <Container>\n      <TitleContainer>\n        <Title>My pets:</Title>\n        <AddPetButton>\n          <Title>Add pet </Title>\n          <button>Add</button>\n        </AddPetButton>\n      </TitleContainer>\n      <PetsItem>\n        <PetsImage src=\"https://dummyimage.com/240x240/000/fff\" alt=\"Dummy\" />\n        <PetsItemInfo>\n          <PetsItemPara>Name: Lorem.</PetsItemPara>\n          <PetsItemPara>Date of birth: Lorem, ipsum.</PetsItemPara>\n          <PetsItemPara>Breed: Lorem, ipsum.</PetsItemPara>\n          <PetsItemPara>Comments: Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, error!</PetsItemPara>\n          <TrashButton />\n        </PetsItemInfo>\n      </PetsItem>\n    </Container>\n  );\n};\n\nexport default PetsData;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 61px 20px;\n`;\n\nexport const UserContainer = styled.div`\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 20px;\n  padding-left: 16px;\n  padding-top: 20px;\n  padding-right: 12px;\n  padding-bottom: 86px;\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n`;\n","// import { useGetCurrentUserQuery } from \"redux/auth/authApi\";\n// import authSelectors from \"redux/auth/authSelectors\";\n// import { useSelector } from \"react-redux\";\nimport { UserData, Logout, PetsData } from \"components/User\";\nimport { Container, UserContainer } from \"./UserPage.styled\";\n\nconst UserPage = () => {\n  // const { data: user = [], isError, isFetching } = useGetCurrentUserQuery();\n  // const userToken = useSelector(authSelectors.getUserToken);\n\n  // useGetCurrentUserQuery(undefined, {\n  //   skip: !userToken,\n  // });\n  // console.log(user, isError, isFetching);\n\n  return (\n    <Container>\n      <UserContainer>\n        <UserData />\n        <Logout />\n      </UserContainer>\n      <PetsData />\n    </Container>\n  );\n};\n\nexport default UserPage;\n"],"names":["useLogoutMutation","logout","onClick","UserImage","styled","ItemContainer","InfoItem","EditableInfo","TitleContainer","Title","InfoContainer","makeEditable","infoName","editableInfo","document","getElementsByClassName","item","toggleAttribute","hasAttribute","console","log","innerHTML","name","email","birthday","phone","city","src","alt","className","Container","AddPetButton","PetsItem","PetsImage","PetsItemInfo","PetsItemPara","UserContainer"],"sourceRoot":""}