{"version":3,"file":"static/js/632.0959c757.chunk.js","mappings":"iSAKaA,EAAYC,EAAAA,EAAAA,IAAU,4nBAUxB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAM,GAGZC,EAAAA,EAAAA,OAAAA,OAKb,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,OAAO,GAEbD,EAAAA,EAAAA,OAAAA,OAQXE,EAAOP,EAAAA,EAAAA,GAAS,2RAGlBK,EAAAA,EAAAA,OAAAA,gBAIA,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAM,IAIzB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,OAAO,IAMxBE,GAAQR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAa,giBAKlBK,EAAAA,EAAAA,OAAAA,WAQLA,EAAAA,EAAAA,OAAAA,UAOA,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,OAAO,IASxBI,EAASV,EAAAA,EAAAA,OAAa,+YAEjBK,EAAAA,EAAAA,OAAAA,OAKPA,EAAAA,EAAAA,OAAAA,MAKKA,EAAAA,EAAAA,OAAAA,QAKL,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,OAAO,IAMxBK,EAAaX,EAAAA,EAAAA,OAAa,qbAE5B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,OAAO,GAGbD,EAAAA,EAAAA,OAAAA,OAKXA,EAAAA,EAAAA,OAAAA,MAKKA,EAAAA,EAAAA,OAAAA,OAQLO,EAAYZ,EAAAA,EAAAA,EAAQ,2GAOpBa,EAAUb,EAAAA,EAAAA,EAAQ,mMAMpBK,EAAAA,EAAAA,OAAAA,UAKES,GAAOd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAY,iG,8BCvI1BgB,EAAY,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACnB,OAAO,SAAC,KAAY,CAACA,KAAMA,EAAMC,OAAQ,SAAAC,GAAO,OAAI,SAACP,EAAS,UAAEO,GAAoB,GACtF,EAEaC,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBP,KAAM,GACNQ,SAAU,GACVC,MAAO,KACP,eAPKC,EAAI,KAAEC,EAAO,KAQpB,GAA2BC,EAAAA,EAAAA,MAAqB,eAAzCC,EAAQ,KAAEC,EAAM,KACjBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCZ,EAAAA,EAAAA,UAAS,GAAE,eAA1Ca,EAAW,KAAEC,EAAc,KAE5BC,EAAc,SAAAC,GAClBC,QAAQC,IAAIF,GAEZ,IAAQf,EAAoDe,EAApDf,MAAOC,EAA6Cc,EAA7Cd,SAAUN,EAAmCoB,EAAnCpB,KAAgBuB,EAAmBH,EAA7BZ,SAAmBC,EAAUW,EAAVX,MAClDI,EAAS,CAAER,MAAAA,EAAOC,SAAAA,EAAUN,KAAAA,EAAMuB,QAAAA,EAASd,MAAAA,IACxCe,SACAC,MAAK,SAAAC,GACJL,QAAQC,IAAI,gCAEZP,EAAS,IACX,IACCY,OAAM,WACLN,QAAQC,IAAI,iBACZM,EAAAA,GAAAA,MAAY,mCACd,IAEFP,QAAQC,IAAIR,EACd,EAEMe,EAAiB,SAACC,GAA4B,IAAnBC,EAAK,wDACpCpB,GAAQ,SAAAqB,GAAI,yBAAUA,GAASF,EAAO,IAClCC,EACFZ,EAAYW,GAGdZ,GAAe,SAAAc,GAAI,OAAIA,EAAO,CAAC,GACjC,EAOMC,EAAQ,EACZ,SAACC,EAAO,CACNC,KAAMN,EACNnB,KAAMA,KAGR,SAAC0B,EAAO,CAACD,KAAMN,EAAgBG,KAXV,SAAAF,GACrBnB,GAAQ,SAAAqB,GAAI,yBAAUA,GAASF,EAAO,IACtCZ,GAAe,SAAAc,GAAI,OAAIA,EAAO,CAAC,GACjC,EAQuDtB,KAAMA,KAG7D,OACE,UAAC5B,EAAS,YACR,SAACQ,EAAI,2BACJ2C,EAAMhB,IACP,UAACrB,EAAO,wCACmB,SAACC,EAAI,CAACwC,GAAI,SAAS,wBAIpD,EAEMH,EAAU,SAAAI,GAId,OACE,SAAC,KAAM,CAACC,cAAeD,EAAM5B,KAAM8B,iBAAkBC,EAAAA,GAAqBC,SAJvD,SAAAC,GACnBL,EAAMH,KAAKQ,EACb,EAEmG,SAC9F,kBACC,UAAC,KAAI,CAACC,aAAa,MAAK,WACtB,mBAAOC,QAAQ,QAAO,WACpB,SAACtD,EAAK,CAACuD,KAAK,QAAQ9C,KAAK,QAAQ+C,GAAG,QAAQC,YAAY,WACxD,SAACjD,EAAS,CAACC,KAAK,cAElB,mBAAO6C,QAAQ,WAAU,WACvB,SAACtD,EAAK,CAACuD,KAAK,WAAW9C,KAAK,WAAW+C,GAAG,WAAWC,YAAY,cACjE,SAACjD,EAAS,CAACC,KAAK,iBAElB,mBAAO6C,QAAQ,kBAAiB,WAC9B,SAACtD,EAAK,CAACuD,KAAK,WAAW9C,KAAK,kBAAkB+C,GAAG,kBAAkBC,YAAY,sBAC/E,SAACjD,EAAS,CAACC,KAAK,wBAElB,SAACP,EAAM,CAACqD,KAAK,SAAQ,oBAChB,GAIf,EAEMV,EAAU,SAAAE,GAKd,OACE,SAAC,KAAM,CAACC,cAAeD,EAAM5B,KAAM8B,iBAAkBS,EAAAA,GAAqBP,SALvD,SAACC,EAAQO,GAC5BZ,EAAMH,KAAKQ,GAAQ,GACnBO,EAAQC,WACV,EAEmG,SAC9F,gBAAGR,EAAM,EAANA,OAAM,OACR,UAAC,KAAI,CAACC,aAAa,MAAK,WACtB,mBAAOC,QAAQ,OAAM,WACnB,SAACtD,EAAK,CAACuD,KAAK,OAAO9C,KAAK,OAAO+C,GAAG,OAAOC,YAAY,UACrD,SAACjD,EAAS,CAACC,KAAK,aAElB,mBAAO6C,QAAQ,WAAU,WACvB,SAACtD,EAAK,CAACuD,KAAK,OAAO9C,KAAK,WAAW+C,GAAG,WAAWC,YAAY,kBAC7D,SAACjD,EAAS,CAACC,KAAK,iBAElB,mBAAO6C,QAAQ,QAAO,WACpB,SAACtD,EAAK,CAACuD,KAAK,MAAM9C,KAAK,QAAQ+C,GAAG,QAAQC,YAAY,kBACtD,SAACjD,EAAS,CAACC,KAAK,cAElB,SAACP,EAAM,CAACqD,KAAK,SAAQ,uBACrB,SAACpD,EAAU,CAACoD,KAAK,SAASM,QAAS,kBAAMd,EAAMN,KAAKW,EAAO,EAAC,oBAGvD,GAIf,E,8BClIa7D,EAAYC,EAAAA,EAAAA,IAAU,qaAGTsE,GAIJ,SAAArE,GAAC,OAAIA,EAAEC,MAAMG,OAAOkE,UAAU,IACzC,SAAAtE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAM,GACRoE,GAGjB,SAAAvE,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,OAAO,GACTmE,GCP5B,EARqB,WACnB,OACE,SAAC,EAAS,WACR,SAACrD,EAAY,KAGnB,C,sHCPMsD,EAAgB,mBAITC,EAAcC,EAAAA,KAAaC,MAAM,CAC5CvD,MAAOsD,EAAAA,KAAatD,MAAM,8BAA8BwD,WACxDvD,SAAUqD,EAAAA,KAEPG,IAAI,EAAG,+CACPC,IAAI,GAAI,0CACRC,QAAQP,EAAe,CAAEvD,QAAS,yCAClC2D,aAGQpB,EAAsBkB,EAAAA,KAAaC,MAAM,CACpDvD,MAAOsD,EAAAA,KAAatD,MAAM,8BAA8BwD,WACxDvD,SAAUqD,EAAAA,KAEPG,IAAI,EAAG,+CACPC,IAAI,GAAI,0CACRC,QAAQP,EAAe,CAAEvD,QAAS,yCAClC2D,WACHtD,gBAAiBoD,EAAAA,KAEdM,MAAM,CAACN,EAAAA,GAAQ,YAAa,MAAO,wBACnCE,aAGQZ,EAAsBU,EAAAA,KAAaC,MAAM,CACpD5D,KAAM2D,EAAAA,KAAaE,WACnBrD,SAAUmD,EAAAA,KAAaK,QA7BH,oHA6B0B,CAAE9D,QAAS,iDAAkD2D,WAC3GpD,MAAOkD,EAAAA,KAAaG,IAAI,GAAGE,QA7BV,oBA6B8B,CAAE9D,QAAS,kDAAmD2D,SAAS,+B","sources":["components/AuthForm/RegisterForm.styled.js","components/AuthForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx","schemas/authSchema.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport colors from \"../../styles/theme\";\nimport { Field } from \"formik\";\nimport { Link as link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 280px;\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  @media ${p => p.theme.media.tablet} {\n    width: 608px;\n    /* top: 114px; */\n    background-color: ${colors.colors.white};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding: 60px 80px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 618px;\n    background-color: ${colors.colors.white};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding: 60px 80px;\n    margin-top: 46px;\n  }\n`;\n\nexport const Text = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${colors.colors.primaryBtnText};\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  margin-bottom: 40px;\n  @media ${p => p.theme.media.tablet} {\n    font-size: 36px;\n    font-weight: 500;\n  }\n  @media ${p => p.theme.media.desktop} {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  height: 40px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  background: ${colors.colors.background};\n  font-size: 14px;\n  line-height: 1.4;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n  color: ${colors.colors.greyText};\n  outline: none;\n  :hover,\n  :focus {\n    border: 3px solid rgba(245, 146, 86, 0.5);\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: 458px;\n    height: 52px;\n    font-size: 18px;\n    font-weight: 400;\n    padding: 14px 32px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-color: ${colors.colors.accent};\n  border-radius: 40px;\n  width: 280px;\n  height: 44px;\n  padding: 10px 28px;\n  color: ${colors.colors.white};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  background: ${colors.colors.accent};\n  margin-top: 24px;\n  :hover {\n    background-color: #ed5a03;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 458px;\n    height: 48px;\n  }\n`;\n\nexport const ButtonBack = styled.button`\n  display: none;\n  @media ${p => p.theme.media.desktop} {\n    display: block;\n    cursor: pointer;\n    border: 2px solid ${colors.colors.accent};\n    border-radius: 40px;\n    width: 458px;\n    height: 48px;\n    padding: 10px 28px;\n    color: ${colors.colors.black};\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 1.4;\n    letter-spacing: 0.04em;\n    background: ${colors.colors.white};\n    margin-top: 16px;\n    :hover {\n      background-color: #ed5a03;\n    }\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  text-align: center;\n  margin-top: -5px;\n  margin-bottom: 15px;\n`;\n\nexport const LinkBox = styled.p`\n  display: flex;\n  justify-content: center;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.34;\n  color: ${colors.colors.greyText};\n  letter-spacing: 0.04em;\n  margin-top: 40px;\n`;\n\nexport const Link = styled(link)`\n  text-decoration-line: underline;\n  color: blue;\n  margin-left: 5px;\n`;\n","import { Formik, Form, ErrorMessage } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { stepOneRegistSchema, stepTwoRegistSchema } from \"schemas/authSchema\";\nimport { Container, Text, Input, Button, ButtonBack, LinkBox, Link, ErrorText } from \"./RegisterForm.styled\";\nimport { toast } from \"react-toastify\";\nimport { useRegisterMutation } from \"redux/auth/authApi\";\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>} />;\n};\n\nexport const RegisterForm = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    name: \"\",\n    location: \"\",\n    phone: \"\",\n  });\n  const [register, status] = useRegisterMutation();\n  const navigate = useNavigate();\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = formData => {\n    console.log(formData);\n\n    const { email, password, name, location: address, phone } = formData;\n    register({ email, password, name, address, phone })\n      .unwrap()\n      .then(payload => {\n        console.log(`User successfully registered`);\n        // navigate(\"/\"); if success - navigate user to userPage\n        navigate(\"/\");\n      })\n      .catch(() => {\n        console.log(\"Handle errors\");\n        toast.error(\"Sorry, such email already exists\");\n      });\n\n    console.log(status);\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne\n      next={handleNextStep}\n      data={data}\n      // errors={errors}\n    />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return (\n    <Container>\n      <Text>Registration</Text>\n      {steps[currentStep]}\n      <LinkBox>\n        Already have an account? <Link to={\"/login\"}>Login</Link>\n      </LinkBox>\n    </Container>\n  );\n};\n\nconst StepOne = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n  return (\n    <Formik initialValues={props.data} validationSchema={stepOneRegistSchema} onSubmit={handleSubmit}>\n      {() => (\n        <Form autoComplete=\"off\">\n          <label htmlFor=\"email\">\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n            <FormError name=\"email\" />\n          </label>\n          <label htmlFor=\"password\">\n            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\n            <FormError name=\"password\" />\n          </label>\n          <label htmlFor=\"confirmPassword\">\n            <Input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" />\n            <FormError name=\"confirmPassword\" />\n          </label>\n          <Button type=\"submit\">Next</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst StepTwo = props => {\n  const handleSubmit = (values, actions) => {\n    props.next(values, true);\n    actions.resetForm();\n  };\n  return (\n    <Formik initialValues={props.data} validationSchema={stepTwoRegistSchema} onSubmit={handleSubmit}>\n      {({ values }) => (\n        <Form autoComplete=\"off\">\n          <label htmlFor=\"name\">\n            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" />\n            <FormError name=\"name\" />\n          </label>\n          <label htmlFor=\"location\">\n            <Input type=\"text\" name=\"location\" id=\"location\" placeholder=\"City, region\" />\n            <FormError name=\"location\" />\n          </label>\n          <label htmlFor=\"phone\">\n            <Input type=\"tel\" name=\"phone\" id=\"phone\" placeholder=\"Mobile phone\" />\n            <FormError name=\"phone\" />\n          </label>\n          <Button type=\"submit\">Register</Button>\n          <ButtonBack type=\"button\" onClick={() => props.prev(values)}>\n            Back\n          </ButtonBack>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport wavesMobile from \"../../img/authPages-photos/waves-mobile.png\";\nimport wavesTablet from \"../../img/authPages-photos/waves-tablet.png\";\nimport wavesDesktop from \"../../img/authPages-photos/waves-desktop.png\";\n\nexport const Container = styled.div`\n  max-width: 100vw;\n  min-height: calc(100vh - 115px);\n  background-image: url(${wavesMobile});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center bottom;\n  background-color: ${p => p.theme.colors.background};\n  @media ${p => p.theme.media.tablet} {\n    background-image: url(${wavesTablet});\n    min-height: calc(100vh - 130px);\n  }\n  @media ${p => p.theme.media.desktop} {\n    background-image: url(${wavesDesktop});\n    min-height: calc(100vh - 30px);\n  }\n`;\n","import { RegisterForm } from \"components/AuthForm/RegisterForm\";\nimport { Container } from \"./RegisterPage.styled\";\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import * as yup from \"yup\";\n\nconst passwordRules = /^(?!.* ).{7,32}$/;\nconst locationRules = /^(?=.*[a-zа-я])(?=.*[A-ZА-Я]).{3,32},(?=.*[a-zа-я])(?=.*[A-ZА-Я]).{3,32}$/;\nconst phoneRules = /[+380]+[0-9].{11}/;\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(),\n});\n\nexport const stepOneRegistSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(),\n});\n\nexport const stepTwoRegistSchema = yup.object().shape({\n  name: yup.string().required(),\n  location: yup.string().matches(locationRules, { message: \"Please enter a string in format city, region\" }).required(),\n  phone: yup.string().min(8).matches(phoneRules, { message: \"Please enter a string in format +380XXXXXXXXX\" }).required(\"A phone number is required\"),\n});\n"],"names":["Container","styled","p","theme","media","tablet","colors","desktop","Text","Input","Field","Button","ButtonBack","ErrorText","LinkBox","Link","link","FormError","name","render","message","RegisterForm","useState","email","password","confirmPassword","location","phone","data","setData","useRegisterMutation","register","status","navigate","useNavigate","currentStep","setCurrentStep","makeRequest","formData","console","log","address","unwrap","then","payload","catch","toast","handleNextStep","newData","final","prev","steps","StepOne","next","StepTwo","to","props","initialValues","validationSchema","stepOneRegistSchema","onSubmit","values","autoComplete","htmlFor","type","id","placeholder","stepTwoRegistSchema","actions","resetForm","onClick","wavesMobile","background","wavesTablet","wavesDesktop","passwordRules","loginSchema","yup","shape","required","min","max","matches","oneOf"],"sourceRoot":""}