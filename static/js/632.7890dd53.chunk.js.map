{"version":3,"file":"static/js/632.7890dd53.chunk.js","mappings":"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","sources":["components/AuthForm/RegisterForm.styled.js","components/AuthForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx","schemas/authSchema.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport colors from \"../../styles/theme\";\nimport { Field } from \"formik\";\nimport { Link as link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 280px;\n  padding-top: 42px;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  @media ${p => p.theme.media.tabletDesktop} {\n    width: 608px;\n    top: 50%;\n    background-color: ${colors.colors.white};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding: 60px 80px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 618px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Text = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${colors.colors.primaryBtnText};\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  margin-bottom: 40px;\n  @media ${p => p.theme.media.tabletDesktop} {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  height: 40px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  background: ${colors.colors.background};\n  font-size: 14px;\n  line-height: 1.4;\n  padding: 12px 14px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n  color: ${colors.colors.greyText};\n  outline: none;\n  :hover,\n  :focus {\n    border: 3px solid rgba(245, 146, 86, 0.5);\n  }\n  @media ${p => p.theme.media.tabletDesktop} {\n    width: 448px;\n    height: 52px;\n    font-size: 18px;\n    font-weight: 400;\n    padding: 14px 32px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-color: ${colors.colors.accent};\n  border-radius: 40px;\n  width: 280px;\n  height: 44px;\n  padding: 10px 28px;\n  color: ${colors.colors.white};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  background: ${colors.colors.accent};\n  margin-top: 24px;\n  :hover {\n    background-color: #ed5a03;\n  }\n  @media ${p => p.theme.media.tablet} {\n    width: 448px;\n    height: 44px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 458px;\n    height: 48px;\n  }\n`;\n\nexport const ButtonBack = styled.button`\n  display: none;\n  @media ${p => p.theme.media.desktop} {\n    display: block;\n    cursor: pointer;\n    border: 2px solid ${colors.colors.accent};\n    border-radius: 40px;\n    width: 458px;\n    height: 48px;\n    padding: 10px 28px;\n    color: ${colors.colors.black};\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 1.4;\n    letter-spacing: 0.04em;\n    background: ${colors.colors.white};\n    margin-top: 16px;\n    :hover {\n      background-color: #ed5a03;\n    }\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  text-align: center;\n  font-size: 11px;\n  margin-top: -16px;\n  margin-bottom: 5px;\n  @media ${p => p.theme.media.tablet} {\n    font-size: 12px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    font-size: 13px;\n  }\n`;\n\nexport const LinkBox = styled.p`\n  display: flex;\n  justify-content: center;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.34;\n  color: ${colors.colors.greyText};\n  letter-spacing: 0.04em;\n  margin-top: 40px;\n`;\n\nexport const Link = styled(link)`\n  text-decoration-line: underline;\n  color: blue;\n  margin-left: 5px;\n`;\n\nexport const IconEye = styled.span`\n  position: absolute;\n  padding-top: 11px;\n  left: 90%;\n  cursor: pointer;\n  @media ${p => p.theme.media.tabletDesktop} {\n    left: 80%;\n    padding-top: 16px;\n  }\n`;\n\nexport const IconEyeConfirm = styled.span`\n  position: absolute;\n  padding-top: 11px;\n  left: 90%;\n  cursor: pointer;\n  @media ${p => p.theme.media.tabletDesktop} {\n    left: 80%;\n    padding-top: 16px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n`;\n","import { Formik, Form, ErrorMessage } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { stepOneRegistSchema, stepTwoRegistSchema } from \"schemas/authSchema\";\nimport { Container, Text, Input, InputWrapper, IconEye, IconEyeConfirm, Button, ButtonBack, LinkBox, Link, ErrorText } from \"./RegisterForm.styled\";\n// import { toast } from \"react-toastify\";\nimport { useRegisterMutation } from \"redux/auth/authApi\";\nimport { ImEye, ImEyeBlocked } from \"react-icons/im\";\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>} />;\n};\n\nexport const RegisterForm = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    name: \"\",\n    location: \"\",\n    phone: \"\",\n  });\n  const [register] = useRegisterMutation();\n  //status should be used for spinner\n  const navigate = useNavigate();\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = formData => {\n    // console.log(formData);\n\n    const { email, password, name, location: address, phone } = formData;\n    register({ email, password, name, address, phone })\n      .unwrap()\n      .then(() => {\n        navigate(\"/user\");\n      })\n      .catch(error => {\n        console.log(\"Handle errors\");\n        // toast.error(\"Sorry, your email or password is incorrect! Try again!\");\n      });\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne\n      next={handleNextStep}\n      data={data}\n      // errors={errors}\n    />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  // console.log(status);\n\n  return (\n    <Container>\n      <Text>Registration</Text>\n      {steps[currentStep]}\n      <LinkBox>\n        Already have an account? <Link to={\"/login\"}>Login</Link>\n      </LinkBox>\n    </Container>\n  );\n};\n\nconst StepOne = props => {\n  const [visible, setVisible] = useState(false);\n  const [visibleConfirm, setVisibleConfirm] = useState(false);\n\n  const handleClickVisible = () => {\n    setVisible(!visible);\n  };\n  const handleClickVisibleConfirm = () => {\n    setVisibleConfirm(!visibleConfirm);\n  };\n\n  const handleSubmit = values => {\n    props.next(values);\n  };\n  return (\n    <Formik initialValues={props.data} validationSchema={stepOneRegistSchema} onSubmit={handleSubmit}>\n      {() => (\n        <Form autoComplete=\"off\">\n          <label htmlFor=\"email\">\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n            <FormError name=\"email\" />\n          </label>\n          <label htmlFor=\"password\">\n            <InputWrapper>\n              <Input type={visible ? \"text\" : \"password\"} name=\"password\" id=\"password\" placeholder=\"Password\" />\n              <IconEye onClick={handleClickVisible}>{visible ? <ImEye /> : <ImEyeBlocked />}</IconEye>\n            </InputWrapper>\n            <FormError name=\"password\" />\n          </label>\n          <label htmlFor=\"confirmPassword\">\n            <InputWrapper>\n              <Input type={visibleConfirm ? \"text\" : \"password\"} name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" />\n              <IconEyeConfirm onClick={handleClickVisibleConfirm}>{visibleConfirm ? <ImEye /> : <ImEyeBlocked />}</IconEyeConfirm>\n            </InputWrapper>\n            <FormError name=\"confirmPassword\" />\n          </label>\n          <Button type=\"submit\">Next</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst StepTwo = props => {\n  const handleSubmit = (values, actions) => {\n    props.next(values, true);\n    actions.resetForm();\n  };\n  return (\n    <Formik initialValues={props.data} validationSchema={stepTwoRegistSchema} onSubmit={handleSubmit}>\n      {({ values }) => (\n        <Form autoComplete=\"off\">\n          <label htmlFor=\"name\">\n            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" />\n            <FormError name=\"name\" />\n          </label>\n          <label htmlFor=\"location\">\n            <Input type=\"text\" name=\"location\" id=\"location\" placeholder=\"City, region\" />\n            <FormError name=\"location\" />\n          </label>\n          <label htmlFor=\"phone\">\n            <Input type=\"tel\" name=\"phone\" id=\"phone\" placeholder=\"Mobile phone\" />\n            <FormError name=\"phone\" />\n          </label>\n          <Button type=\"submit\">Register</Button>\n          <ButtonBack type=\"button\" onClick={() => props.prev(values)}>\n            Back\n          </ButtonBack>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport wavesMobile from \"../../img/authPages-photos/waves-mobile.png\";\nimport wavesTablet from \"../../img/authPages-photos/waves-tablet.png\";\nimport wavesDesktop from \"../../img/authPages-photos/waves-desktop.png\";\n\nexport const Container = styled.div`\n  max-width: 100vw;\n  height: calc(100vh - 58px);\n  background-image: url(${wavesMobile});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center bottom;\n  background-color: ${p => p.theme.colors.background};\n  @media ${p => p.theme.media.tablet} {\n    background-image: url(${wavesTablet});\n    height: calc(100vh - 72px);\n  }\n  @media ${p => p.theme.media.desktop} {\n    background-image: url(${wavesDesktop});\n    height: calc(100vh - 68px);\n  }\n`;\n","import { RegisterForm } from \"components/AuthForm/RegisterForm\";\nimport { Container } from \"./RegisterPage.styled\";\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import * as yup from \"yup\";\n\nconst passwordRules = /^(?!.* ).{7,32}$/;\nconst locationRules = /^(?=.*[a-zа-я])(?=.*[A-ZА-Я]).{3,32},(?=.*[a-zа-я])(?=.*[A-ZА-Я]).{3,32}$/;\nconst phoneRules = /[+380]+[0-9].{11}/;\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(\"This field is required\"),\n});\n\nexport const stepOneRegistSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(\"This field is required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"This field is required\"),\n});\n\nexport const stepTwoRegistSchema = yup.object().shape({\n  name: yup.string().required(\"This field is required\"),\n  location: yup.string().matches(locationRules, { message: \"Please enter a string in format city, region\" }).required(\"This field is required\"),\n  phone: yup.string().min(8).matches(phoneRules, { message: \"Please enter a string in format +380XXXXXXXXX\" }).required(\"This field is required\"),\n});\n"],"names":["Container","styled","p","theme","media","tabletDesktop","colors","desktop","Text","Input","Field","Button","tablet","ButtonBack","ErrorText","LinkBox","Link","link","IconEye","IconEyeConfirm","InputWrapper","FormError","name","render","message","RegisterForm","useState","email","password","confirmPassword","location","phone","data","setData","useRegisterMutation","register","navigate","useNavigate","currentStep","setCurrentStep","makeRequest","formData","address","unwrap","then","catch","error","console","log","handleNextStep","newData","final","prev","steps","StepOne","next","StepTwo","to","props","visible","setVisible","visibleConfirm","setVisibleConfirm","handleClickVisible","handleClickVisibleConfirm","initialValues","validationSchema","stepOneRegistSchema","onSubmit","values","autoComplete","htmlFor","type","id","placeholder","onClick","stepTwoRegistSchema","actions","resetForm","wavesMobile","background","wavesTablet","wavesDesktop","passwordRules","loginSchema","yup","shape","required","min","max","matches","oneOf"],"sourceRoot":""}