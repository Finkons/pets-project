{"version":3,"file":"static/js/290.7ba38b46.chunk.js","mappings":"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","sources":["components/User/Logout/Logout.styled.js","components/User/Logout/Logout.jsx","components/User/UserData/UserData.styled.js","components/User/UserCommon.styled.js","components/User/UserData/UserDataTitle.jsx","components/User/UserData/UserData.jsx","components/User/PetsData/PetsData.styled.js","components/User/PetsData/ModalAddsPet/ModalAddsPet.styled.js","components/User/PetsData/ModalAddsPet/ModalAddsPet.jsx","components/User/PetsData/PetsData.jsx","pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  background: #ffffff;\n  box-shadow: 7px 14px 14px rgba(0, 0, 0, 0.11);\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  padding-right: 12px;\n  padding-bottom: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n","import { useLogoutMutation } from \"redux/auth/authApi\";\nimport { Container } from \"./Logout.styled\";\n\nconst Logout = () => {\n  const [logout] = useLogoutMutation();\n  return (\n    <Container>\n      <button onClick={() => logout()}>Logout</button>\n    </Container>\n  );\n};\n\nexport default Logout;\n","import styled from \"@emotion/styled\";\n\nexport const UserImage = styled.img`\n  border-radius: 50%;\n  width: 233px;\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 12px;\n`;\n\nexport const InfoItem = styled.p`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  display: flex;\n  letter-spacing: 0.04em;\n  color: #000000;\n`;\n\nexport const EditableInfo = styled.p`\n  width: 159px;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n  color: #000000;\n  border-radius: 45px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  padding-left: 16px;\n  padding-top: 20px;\n  padding-right: 12px;\n  padding-bottom: 44px;\n  margin-top: 40px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  letter-spacing: 0.04em;\n`;\n\nexport const InfoContainer = styled.div``;\n","import { TitleContainer, Title } from \"../UserCommon.styled\";\n\nconst UserDataTitle = () => {\n  return (\n    <TitleContainer>\n      <Title>My information</Title>\n    </TitleContainer>\n  );\n};\n\nexport default UserDataTitle;\n","import { useRef } from \"react\";\nimport { CameraButton, EditButton } from \"components/Button\";\nimport { UserImage, ItemContainer, InfoItem, EditableInfo, Container } from \"./UserData.styled\";\nimport PropTypes from \"prop-types\";\nimport { InfoContainer } from \"../UserCommon.styled\";\nimport { default as UserTitle } from \"./UserDataTitle\";\nimport { notifyWarning } from \"helpers/toastNotifications\";\nimport { useEditUserDataMutation } from \"redux/auth/authApi\";\n\nconst UserData = ({ user }) => {\n  const {\n    avatarURL = \"https://dummyimage.com/233x233\",\n    name = \"Name\",\n    email = \"mail@mail.ua\",\n    birthday = \"00.00.0000\",\n    phone = \"+3800000000\",\n    address = \"City, City\",\n  } = user;\n\n  const [updateUserData, { isLoading }] = useEditUserDataMutation();\n  console.log(isLoading);\n\n  const makeEditable = async infoName => {\n    const editableInfo = document.getElementsByClassName(`userEditable_${infoName}`).item(0);\n    editableInfo.toggleAttribute(\"contentEditable\");\n    if (editableInfo.hasAttribute(\"contentEditable\")) {\n      // console.log(\"should change color of background\");\n    }\n    if (!editableInfo.hasAttribute(\"contentEditable\")) {\n      // console.log(`${editableInfo.innerHTML} should be sent in request to be saved`);\n      const infoJson = `{\"${infoName}\": \"${editableInfo.innerHTML}\"}`;\n      const { data } = await updateUserData(infoJson);\n      console.log(data);\n    }\n  };\n\n  const inputFile = useRef(null);\n  const onUploadClick = () => {\n    inputFile.current.click();\n  };\n  const onChangeFile = e => {\n    !e.target.files[0] ? notifyWarning(\"Please choose a file\") : console.log(e.target.files[0]);\n  };\n\n  return (\n    <>\n      <UserTitle />\n      <Container>\n        <UserImage src={avatarURL} alt=\"userImage\" />\n        <CameraButton onClick={onUploadClick} inputFile={inputFile} onChangeFile={onChangeFile} />\n        <InfoContainer>\n          <ItemContainer>\n            <InfoItem>Name:</InfoItem>\n            <EditableInfo className=\"userEditable_name\">{name}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"name\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>Email:</InfoItem>\n            <EditableInfo className=\"userEditable_email\">{email}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"email\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>Birthday:</InfoItem>\n            <EditableInfo className=\"userEditable_birthday\">{birthday}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"birthday\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>Phone:</InfoItem>\n            <EditableInfo className=\"userEditable_phone\">{phone}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"phone\")} />\n          </ItemContainer>\n          <ItemContainer>\n            <InfoItem>City:</InfoItem>\n            <EditableInfo className=\"userEditable_address\">{address}</EditableInfo>\n            <EditButton onClick={() => makeEditable(\"address\")} />\n          </ItemContainer>\n        </InfoContainer>\n      </Container>\n    </>\n  );\n};\n\nUserData.propTypes = {\n  user: PropTypes.shape({\n    avatarURL: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    birthday: PropTypes.string,\n    phone: PropTypes.string,\n    address: PropTypes.string,\n  }),\n};\n\nexport default UserData;\n","import styled from \"@emotion/styled\";\n\nexport const AddPetButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const PetsItem = styled.div`\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 20px;\n  padding: 16px 20px 40px;\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PetsImage = styled.img`\n  border-radius: 20px;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 240px;\n`;\n\nexport const PetsItemPara = styled.p`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  display: flex;\n  letter-spacing: 0.04em;\n  color: #000000;\n  margin-top: 12px;\n`;\n","import styled from \"@emotion/styled\";\nimport { Field } from \"formik\";\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-top: 161px;\n  backgroung-color: white;\n  padding: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: ${p => p.theme.colors.white};\n  padding: 40px 20px;\n  margin-bottom: 50px;\n  border-radius: ${p => p.theme.radio.btn};\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  margin-bottom: 8px;\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const TextField = styled(Field)`\n  padding-left: 14px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n`;\n","import React from \"react\";\nimport * as GS from \"components/User/UserCommon.styled\";\nimport * as S from \"./ModalAddsPet.styled\";\nimport Backdrop from \"components/Modal/Backdrop\";\nimport { handleBackdropClick } from \"helpers/modalHelpers\";\n\nconst ModalAddsPet = ({ handleModalToggle }) => {\n  return (\n    <Backdrop onClick={e => handleBackdropClick(e, handleModalToggle)}>\n      <GS.Container>\n        <S.Form>\n          <GS.TitleContainer>\n            <GS.Title>Add pet</GS.Title>\n          </GS.TitleContainer>\n          <S.Label>Name pet</S.Label>\n          {/* <S.TextField\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Type name pet\"\n            required\n            minLength=\"2\"\n            maxLength=\"48\"\n            title=\"Length of title should be 2-16 letters\"\n          /> */}\n          <S.Label>Date of birth</S.Label>\n          {/* <S.TextField\n            id=\"birthday\"\n            name=\"birthday\"\n            placeholder=\"Type date of birth\"\n            required\n            minLength=\"2\"\n            maxLength=\"48\"\n            title=\"Length of title should be 2-16 letters\"\n          /> */}\n          <S.Label>Breed</S.Label>\n          {/* <S.TextField\n            id=\"breed\"\n            name=\"breed\"\n            placeholder=\"Type breed\"\n            required\n            minLength=\"2\"\n            maxLength=\"48\"\n            title=\"Length of title should be 2-16 letters\"\n          /> */}\n        </S.Form>\n      </GS.Container>\n    </Backdrop>\n  );\n};\n\nexport default ModalAddsPet;\n","import React, { useState } from \"react\";\nimport { TrashButton } from \"components/Button\";\nimport { AddPetButton, PetsItem, PetsImage, PetsItemPara } from \"./PetsData.styled\";\nimport { TitleContainer, Title, InfoContainer, Container } from \"../UserCommon.styled\";\nimport { ModalAddsPet } from \"./ModalAddsPet\";\n\nconst PetsData = () => {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleModalToggle = () => {\n    setExpanded(prev => {\n      document.body.className = prev ? \"\" : \"no-scroll\";\n      return !prev;\n    });\n  };\n\n  return (\n    <>\n      <Container>\n        <TitleContainer>\n          <Title>My pets:</Title>\n          <AddPetButton>\n            <Title>Add pet </Title>\n            <button onClick={handleModalToggle}>Add</button>\n          </AddPetButton>\n        </TitleContainer>\n        <PetsItem>\n          <PetsImage src=\"https://dummyimage.com/240x240/000/fff\" alt=\"Dummy\" />\n          <InfoContainer>\n            <PetsItemPara>Name: Lorem.</PetsItemPara>\n            <PetsItemPara>Date of birth: Lorem, ipsum.</PetsItemPara>\n            <PetsItemPara>Breed: Lorem, ipsum.</PetsItemPara>\n            <PetsItemPara>Comments: Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, error!</PetsItemPara>\n            <TrashButton />\n          </InfoContainer>\n        </PetsItem>\n      </Container>\n\n      {expanded && <ModalAddsPet handleModalToggle={handleModalToggle} />}\n    </>\n  );\n};\n\nexport default PetsData;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 61px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Manrope\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n`;\n","import { useGetCurrentUserQuery } from \"redux/auth/authApi\";\nimport authSelectors from \"redux/auth/authSelectors\";\nimport { useSelector } from \"react-redux\";\nimport { UserData, Logout, PetsData } from \"components/User\";\nimport { Container } from \"./UserPage.styled\";\n\nconst UserPage = () => {\n  const userToken = useSelector(authSelectors.getUserToken);\n  const { data: user = {}, isError, isFetching } = useGetCurrentUserQuery({ skip: userToken });\n\n  return (\n    <Container>\n      <div>\n        <UserData user={user} isError={isError} isFetching={isFetching} />\n        <Logout />\n      </div>\n      <PetsData />\n    </Container>\n  );\n};\n\nexport default UserPage;\n"],"names":["Container","styled","useLogoutMutation","logout","onClick","UserImage","ItemContainer","InfoItem","EditableInfo","TitleContainer","Title","InfoContainer","user","avatarURL","name","email","birthday","phone","address","useEditUserDataMutation","updateUserData","isLoading","console","log","makeEditable","infoName","editableInfo","document","getElementsByClassName","item","toggleAttribute","hasAttribute","infoJson","innerHTML","data","inputFile","useRef","src","alt","current","click","onChangeFile","e","target","files","notifyWarning","className","AddPetButton","PetsItem","PetsImage","PetsItemPara","Form","p","theme","colors","white","radio","btn","Label","Field","handleModalToggle","Backdrop","handleBackdropClick","useState","expanded","setExpanded","prev","body","userToken","useSelector","authSelectors","useGetCurrentUserQuery","skip","isError","isFetching"],"sourceRoot":""}