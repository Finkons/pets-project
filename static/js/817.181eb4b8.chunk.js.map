{"version":3,"file":"static/js/817.181eb4b8.chunk.js","mappings":"yOAGaA,EAAYC,EAAAA,EAAAA,IAAU,6FAMtBC,EAAOD,EAAAA,EAAAA,GAAS,iLAUhBE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAa,iYAkBrBI,EAASJ,EAAAA,EAAAA,OAAa,+VAmBtBK,EAAYL,EAAAA,EAAAA,EAAQ,mF,UCpDpBM,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAAaE,MAAM,8BAA8BC,WACxDC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,+CACPC,IAAI,GAAI,0CACRC,QARiB,mBAQM,CAAEC,QAAS,yCAClCL,a,UCACM,EAAgB,CACpBP,MAAO,GACPE,SAAU,IAGNM,EAAY,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACnB,OAAO,SAAC,KAAY,CAACA,KAAMA,EAAMC,OAAQ,SAAAJ,GAAO,OAAI,SAACV,EAAS,UAAEU,GAAoB,GACtF,EAEaK,EAAY,WAQvB,IAAMC,EAAY,yCAAG,WAAOC,EAAQC,GAAO,sEAEpB,OADrBC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAAS,SACf,IAAIG,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,IAAK,IAAE,KAAD,EACvDJ,EAAQM,YAAY,2CACrB,gBALiB,wCAOlB,OACE,UAAC9B,EAAS,YACR,SAACE,EAAI,qBACL,SAAC,KAAM,CAACe,cAAeA,EAAec,iBAAkBxB,EAAayB,SAAUV,EAAa,SACzF,gBAAGW,EAAY,EAAZA,aAAY,OACd,UAAC,KAAI,CAACC,aAAa,MAAK,WACtB,mBAAOC,QAAQ,QAAO,WACpB,SAAChC,EAAK,CAACiC,KAAK,QAAQjB,KAAK,QAAQkB,YAAY,WAC7C,SAACnB,EAAS,CAACC,KAAK,cAElB,mBAAOgB,QAAQ,WAAU,WACvB,SAAChC,EAAK,CAACiC,KAAK,WAAWjB,KAAK,WAAWkB,YAAY,cACnD,SAACnB,EAAS,CAACC,KAAK,iBAElB,SAACd,EAAM,CAACiC,SAAUL,EAAcG,KAAK,SAAQ,qBAGxC,KAGX,oDACyB,4CAI/B,ECjDA,EARkB,WAChB,OAEE,SAACf,EAAS,GAGd,C","sources":["components/AuthForm/LoginForm.styled.js","schemas/loginSchema.js","components/AuthForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Field } from \"formik\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Text = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: #111111;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  margin-top: 42px;\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  height: 40px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  background: #fdf7f2;\n  font-size: 14px;\n  line-height: 19px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n  :hover {\n    border: 1px solid rgba(245, 146, 86, 0.5);\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-color: #f59256;\n  border-radius: 40px;\n  width: 280px;\n  height: 44px;\n  padding: 10px 28px;\n  color: white;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  background: #f59256;\n  margin-top: 40px;\n  :hover {\n    background-color: #995024;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  text-align: center;\n  margin-top: 10px;\n`;\n","import * as yup from \"yup\";\n\nconst passwordRules = /^(?!.* ).{7,32}$/;\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(),\n  password: yup\n    .string()\n    .min(7, \"Password must be at least 7 characters long\")\n    .max(32, \"Password must be at most 32 characters\")\n    .matches(passwordRules, { message: \"Please enter password without spaces\" })\n    .required(),\n});\n","import { Formik, Form, ErrorMessage } from \"formik\";\nimport { Container, Text, Input, Button, ErrorText } from \"./LoginForm.styled\";\nimport { loginSchema } from \"schemas/loginSchema\";\n// import { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useLocation } from \"react-router-dom\";\n// import authSelectors from 'redux/auth/authSelectors';\n// import { authOperations } from 'redux/auth';\n// import { Container, Form, Text, Error } from './AuthorizationForm.styled';\n// import { Button, TextField } from '@mui/material';\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>} />;\n};\n\nexport const LoginForm = () => {\n  // const dispatch = useDispatch();\n  // const error = useSelector(authSelectors.getUserError);\n  // const location = useLocation().pathname;\n\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (values, actions) => {\n    console.log(values);\n    console.log(actions);\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    actions.resetForm();\n  };\n\n  return (\n    <Container>\n      <Text>Login</Text>\n      <Formik initialValues={initialValues} validationSchema={loginSchema} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <Form autoComplete=\"off\">\n            <label htmlFor=\"email\">\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <label htmlFor=\"password\">\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n              <FormError name=\"password\" />\n            </label>\n            <Button disabled={isSubmitting} type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <p>\n        Don't have an account? <span>Register</span>\n      </p>\n    </Container>\n  );\n};\n","import { LoginForm } from \"components/AuthForm/LoginForm\";\n// import { Container } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    // <Container>\n    <LoginForm />\n    // </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Container","styled","Text","Input","Field","Button","ErrorText","loginSchema","yup","shape","email","required","password","min","max","matches","message","initialValues","FormError","name","render","LoginForm","handleSubmit","values","actions","console","log","Promise","resolve","setTimeout","resetForm","validationSchema","onSubmit","isSubmitting","autoComplete","htmlFor","type","placeholder","disabled"],"sourceRoot":""}